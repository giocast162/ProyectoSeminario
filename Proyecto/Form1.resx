<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>